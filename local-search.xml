<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>First</title>
    <link href="/2024/12/31/first/"/>
    <url>/2024/12/31/first/</url>
    
    <content type="html"><![CDATA[<p>2024的最后一天，马上就是2025了，又是第一篇博客，不写点什么似乎有点错过的感觉<br>记得习惯叫年份的时候称2024还没多久，时光荏苒，想想自己2024年做了什么，找工作，失业，找工作，这一年几乎没什么收获，有的，只是为了生活早出晚归，抑或失业后在家摆烂。其实仔细想想的话还是有一些事情值得回忆的，但是仔细想想真的还是挺费脑筋。我甚至不记得去年立了什么flag<br>就连这篇博客，我连md语法都用不熟，毕竟在vscode没有提示，只能勉强先写一些文本，等闲下心来再好好去整理一下<br>写到这里，我几乎已经写不出什么了，为2025年立个flag吧。</p><ul><li>学习英语</li><li>健身</li><li>第三个，间歇性失忆</li></ul><p>这些对我来说都是非常难的，英语我几乎没什么基础，但我又想达到日常口语水平，我必须从头学，我也不知道自己能学到什么程度，当然学多少算多少，这个flag是因为我比较喜欢英语特别是滔滔不绝字字粘连的哪种感觉哈哈哈哈。第二个是健身，omg，这几乎也很难，因为这是一个综合性的事情，做饭，动作，搭配，每一个点都需要花很多心思，而且我比较社恐，用网络话说就是i人？哈哈哈我不太记得了，一个人去健身房而且没有经验，这也挺难的。<br>希望flag不只是flag<br>就到此为止吧，我要去网吧玩游戏了，毕竟是跨年，没人陪，还是休息，玩玩游戏累了回家睡觉<br>最后的最后，附上一张照片吧，我更愿称他为合照，当然这并不是我的猫<br><img src="/2024/12/31/first/hand.jpg" alt="author"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>sonarqube最佳实践</title>
    <link href="/2024/12/25/sonarqube%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    <url>/2024/12/25/sonarqube%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="sonarqube最佳实践"><a href="#sonarqube最佳实践" class="headerlink" title="sonarqube最佳实践"></a>sonarqube最佳实践</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://www.sonarsource.com/">SonarQube</a> 是一个流行的开源平台，主要用于持续检查代码质量，检测 bug、漏洞和代码异味（code smells）。它支持多种编程语言，能够对代码进行静态分析，帮助开发团队维护高质量的代码。SonarQube 可以与 Jenkins 集成，以便在构建过程中自动分析代码质量。</p><h2 id="使用docker部署"><a href="#使用docker部署" class="headerlink" title="使用docker部署"></a>使用docker部署</h2><p>sonarqube依赖pgsql和es，因此我们需要部署三个服务</p><ul><li>pgsql:用于存储分析结果，配置数据等</li><li>es:用于存储代码中的问题，函数等，方便快速检索</li></ul><p>使用docker-compose部署</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><br><span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">sonarqube</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">sonarqube:9.9.4-community</span><br>    <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">sonarqube</span><br>    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;9000:9000&quot;</span><br>    <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">SONARQUBE_JDBC_USERNAME=sonar</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">SONARQUBE_JDBC_PASSWORD=sonar</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">sonar.search.host=http://elasticsearch:9200</span><br>    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/sonarqube/data:/opt/sonarqube/data</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/sonarqube/extensions:/opt/sonarqube/extensions</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/sonarqube/logs:/opt/sonarqube/logs</span><br>    <span class="hljs-attribute">depends_on</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">postgres</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">elasticsearch</span><br>    <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">sonar-network</span><br>    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br><br>  <span class="hljs-attribute">postgres</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">postgres:13</span><br>    <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">sonarqube-db</span><br>    <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">POSTGRES_USER=sonar</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">POSTGRES_PASSWORD=sonar</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">POSTGRES_DB=sonarqube</span><br>    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">pgdata:/var/lib/postgresql/data</span><br>    <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">sonar-network</span><br>    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br><br>  <span class="hljs-attribute">elasticsearch</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">elasticsearch:7.10.1</span><br>    <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">elasticsearch</span><br>    <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">discovery.type=single-node</span><br>    <span class="hljs-attribute">ulimits</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">memlock</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">soft</span><span class="hljs-punctuation">:</span> <span class="hljs-string">-1</span><br>        <span class="hljs-attribute">hard</span><span class="hljs-punctuation">:</span> <span class="hljs-string">-1</span><br>    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">esdata:/usr/share/elasticsearch/data</span><br>    <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">sonar-network</span><br>    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br><br><span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">sonar-network</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">driver</span><span class="hljs-punctuation">:</span> <span class="hljs-string">bridge</span><br><br><span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">pgdata</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">driver</span><span class="hljs-punctuation">:</span> <span class="hljs-string">local</span><br>  <span class="hljs-attribute">esdata</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">driver</span><span class="hljs-punctuation">:</span> <span class="hljs-string">local</span><br></code></pre></td></tr></table></figure><p>执行<code>docker-compose up -d</code>运行服务,等待几分钟后在浏览器访问页面,默认账户<code>admin/admin</code></p><p>由于我们部署的是社区版,不支持多分支扫描,所以我们需要使用一个开源插件以支持此功能,插件:<a href="https://github.com/mc1arke/sonarqube-community-branch-plugin/">sonarqube-community-branch-plugin</a>,我们的sonarqube版本是9.9(LTS),对应的插件版本就是1.14.0,你可以通过查看描述文档以确认版本对照关系</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><br><span class="hljs-comment"># 下载插件到sonar插件目录</span><br><span class="hljs-attribute">wget</span> https://github.com/mc1arke/sonarqube-community-branch-plugin/releases/download/<span class="hljs-number">1</span>.<span class="hljs-number">14</span>.<span class="hljs-number">0</span>/sonarqube-community-branch-plugin-<span class="hljs-number">1</span>.<span class="hljs-number">14</span>.<span class="hljs-number">0</span>.jar -P /opt/sonarqube/extensions/plugins/<br><span class="hljs-comment"># 修改sonarqube配置文件以支持此插件</span><br><span class="hljs-attribute">docker</span> exec -ti sonarqube bash<br><span class="hljs-attribute">echo</span> &#x27;sonar.web.javaAdditionalOpts=-javaagent:./extensions/plugins/sonarqube-community-branch-plugin-<span class="hljs-number">1</span>.<span class="hljs-number">14</span>.<span class="hljs-number">0</span>.jar=web&#x27; &gt;&gt; conf/sonar.properties<br><span class="hljs-attribute">echo</span> &#x27;sonar.ce.javaAdditionalOpts=-javaagent:./extensions/plugins/sonarqube-community-branch-plugin-<span class="hljs-number">1</span>.<span class="hljs-number">14</span>.<span class="hljs-number">0</span>.jar=ce&#x27; &gt;&gt; conf/sonar.properties<br></code></pre></td></tr></table></figure><p>我们还需要修改默认的主分支名称和server url,登录到页面</p><!-- ![alt text](sonarqube最佳实践/image.png) --><p><img src="/2024/12/25/sonarqube%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/image.png" alt="修改主分支"><br><img src="/2024/12/25/sonarqube%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/image-1.png" alt="设置baseURL"></p><h2 id="使用jenkins任务扫描代码"><a href="#使用jenkins任务扫描代码" class="headerlink" title="使用jenkins任务扫描代码"></a>使用jenkins任务扫描代码</h2><p>我们需要在jenkins集成sonar,因此要做一些配置<br>打开jenkins的插件管理,下载sonarqube scanner插件,这是一个扫描器,他可以扫描多种语言的代码<br><img src="/2024/12/25/sonarqube%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/image-3.png" alt="插件下载"><br>在全局工具配置中安装scanner<br><img src="/2024/12/25/sonarqube%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/image-4.png" alt="配置scanner"></p><p>我们新建一个jenkins流水线任务,他需要两个参数:ssh形式的代码地址和分支名称,然后将参数传递到sh脚本进行扫描,最后清理代码目录</p><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs puppet"><span class="hljs-keyword">pipeline</span> &#123;<br>    agent &#123;<br>        label <span class="hljs-string">&#x27;slave1&#x27;</span><br>    &#125;<br>    <span class="hljs-keyword">options</span> &#123; timestamps() &#125;<br>    <span class="hljs-keyword">parameters</span> &#123;<br>        string(<span class="hljs-literal">name</span>: <span class="hljs-string">&#x27;codeUrl&#x27;</span>, defaultValue: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-literal">description</span>: <span class="hljs-string">&#x27;输入代码仓库URL(ssh格式)&#x27;</span>, trim: <span class="hljs-keyword">true</span>)<br>        string(<span class="hljs-literal">name</span>: <span class="hljs-string">&#x27;codeBranch&#x27;</span>, defaultValue: <span class="hljs-string">&#x27;master&#x27;</span>, <span class="hljs-literal">description</span>: <span class="hljs-string">&#x27;输入代码仓库分支名称&#x27;</span>, trim: <span class="hljs-keyword">true</span>)<br>        // string(<span class="hljs-literal">name</span>: <span class="hljs-string">&#x27;serviceName&#x27;</span>, defaultValue: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-literal">description</span>: <span class="hljs-string">&#x27;输入服务名称&#x27;</span>, trim: <span class="hljs-keyword">true</span>)<br>    &#125;<br>    <span class="hljs-keyword">stages</span> &#123;<br>        stage(<span class="hljs-string">&#x27;代码扫描&#x27;</span>) &#123;<br>            steps &#123;<br>                // sh <span class="hljs-string">&quot;sh common/sonar-scan.sh <span class="hljs-variable">$codeUrl</span> <span class="hljs-variable">$codeBranch</span> <span class="hljs-variable">$serviceName</span>&quot;</span><br>                sh <span class="hljs-string">&quot;sh common/sonar-scan.sh <span class="hljs-variable">$codeUrl</span> <span class="hljs-variable">$codeBranch</span>&quot;</span><br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">post</span> &#123;<br>        always &#123;<br>            sh <span class="hljs-string">&#x27;sudo rm -rf /data/sonar/code/* /data/sonar/code/.[!.]*&#x27;</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这个流水线调用一个脚本,他的核心逻辑是:在一个临时目录拉取代码库,然后使用maven命令编译并扫描分支,其中的代码库url和分支来自位置参数传递</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 配置变量</span><br>code_dir=<span class="hljs-string">&quot;/data/sonar/code&quot;</span>  <span class="hljs-comment"># 代码临时目录</span><br>code_url=<span class="hljs-variable">$1</span>                  <span class="hljs-comment"># Git 仓库 URL</span><br>branch_name=<span class="hljs-variable">$2</span>               <span class="hljs-comment"># 分支名称</span><br><span class="hljs-comment">#service_name=$3              # SonarQube 项目名称</span><br>sonar_baseUrl=<span class="hljs-string">&quot;https://sonar.xxxx.xyz&quot;</span>  <span class="hljs-comment"># SonarQube 地址</span><br>sonar_token=<span class="hljs-string">&quot;sqa_1e8fd6d00dd2xxxxxxxxxcbd25452337a1d&quot;</span>  <span class="hljs-comment"># SonarQube Token</span><br><br><span class="hljs-comment"># 克隆代码函数</span><br><span class="hljs-function"><span class="hljs-title">clone_code</span></span>() &#123;<br>    <span class="hljs-keyword">if</span> [ ! -d <span class="hljs-string">&quot;<span class="hljs-variable">$code_dir</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;创建代码目录：<span class="hljs-variable">$code_dir</span>&quot;</span><br>        <span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$code_dir</span>&quot;</span><br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;开始克隆代码...&quot;</span><br>    <span class="hljs-built_in">sudo</span> git <span class="hljs-built_in">clone</span> -b <span class="hljs-string">&quot;<span class="hljs-variable">$branch_name</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$code_url</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$code_dir</span>&quot;</span><br><br>    <span class="hljs-keyword">if</span> [ $? -ne 0 ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;克隆代码失败&quot;</span><br>        <span class="hljs-built_in">exit</span> 1<br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;代码克隆成功&quot;</span><br>&#125;<br><br><span class="hljs-comment"># SonarQube 分析函数</span><br><span class="hljs-function"><span class="hljs-title">sonar_analysis</span></span>() &#123;<br>    <span class="hljs-built_in">cd</span> <span class="hljs-variable">$code_dir</span> || &#123; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;无法进入 SonarQube 目录&quot;</span>; <span class="hljs-built_in">exit</span> 1; &#125;<br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;开始进行 SonarQube 分析...&quot;</span><br>    <span class="hljs-built_in">sudo</span> mvn clean verify sonar:sonar \<br>    -Dsonar.host.url=<span class="hljs-string">&quot;<span class="hljs-variable">$sonar_baseUrl</span>&quot;</span> \<br>    -Dsonar.login=<span class="hljs-string">&quot;<span class="hljs-variable">$sonar_token</span>&quot;</span> \<br>    -s /var/jenkins_home/settings.xml \<br>    -Dsonar.branch.name=<span class="hljs-string">&quot;<span class="hljs-variable">$branch_name</span>&quot;</span><br><br>    <span class="hljs-keyword">if</span> [ $? -eq 0 ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;SonarQube 分析完成&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;SonarQube 分析失败&quot;</span><br>        <span class="hljs-built_in">exit</span> 1<br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-comment"># 主函数</span><br><span class="hljs-function"><span class="hljs-title">main</span></span>() &#123;<br>    clone_code<br>    sonar_analysis<br>&#125;<br><br><span class="hljs-comment"># 执行主函数</span><br>main<br></code></pre></td></tr></table></figure><p>这个脚本还有优化空间,可以增加一个并发函数支持多个同时进行,临时代码目录就用随机数生成一个目录<br>上面的脚本中还需要一个token以连接到sonar,以下是生成方法<br><img src="/2024/12/25/sonarqube%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/image-2.png" alt="生成token"></p><h2 id="代码扫描操作手册"><a href="#代码扫描操作手册" class="headerlink" title="代码扫描操作手册"></a>代码扫描操作手册</h2><p>打开任务链接<a href="http://jenkins-sit.xtt-inc.xyz:8080/job/ops/job/%E4%BB%A3%E7%A0%81%E6%89%AB%E6%8F%8F/">代码扫描</a><br>点击构建,输入ssh格式的仓库地址和分支名称,点击build执行<br><img src="/2024/12/25/sonarqube%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/image-5.png" alt="运行"><br>待任务执行完成后,打开<a href="https://sonar.xtt.xyz/">sonar</a>查看项目的扫描结果<br><img src="/2024/12/25/sonarqube%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/image-6.png" alt="结果"></p>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SonarQube</tag>
      
      <tag>Jenkins</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/12/25/hello-world/"/>
    <url>/2024/12/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
